// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.0 Build 711 06/05/2020 SJ Lite Edition"

// DATE "11/09/2024 10:03:27"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module controle_andares (
	andar,
	seletor_andar,
	clock_in);
output 	[1:0] andar;
input 	[1:0] seletor_andar;
input 	clock_in;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \FlipFlop_Q1|Q~regout ;
wire \mux_para_clock|and0~0_combout ;
wire \clock_in~combout ;
wire \mux_para_clock|and0~combout ;
wire \FlipFlop_Q0|Q~regout ;
wire [1:0] \seletor_andar~combout ;


// Location: PIN_7,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \seletor_andar[0]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\seletor_andar~combout [0]),
	.padio(seletor_andar[0]));
// synopsys translate_off
defparam \seletor_andar[0]~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_8,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \seletor_andar[1]~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\seletor_andar~combout [1]),
	.padio(seletor_andar[1]));
// synopsys translate_off
defparam \seletor_andar[1]~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N1
maxii_lcell \FlipFlop_Q1|Q (
// Equation(s):
// \FlipFlop_Q1|Q~regout  = DFFEAS((\seletor_andar~combout [1] & ((\FlipFlop_Q0|Q~regout ) # ((\seletor_andar~combout [0] & \FlipFlop_Q1|Q~regout )))) # (!\seletor_andar~combout [1] & (((\FlipFlop_Q0|Q~regout  & \FlipFlop_Q1|Q~regout )))), 
// GLOBAL(\mux_para_clock|and0~combout ), VCC, , , , , , )

	.clk(\mux_para_clock|and0~combout ),
	.dataa(\seletor_andar~combout [0]),
	.datab(\seletor_andar~combout [1]),
	.datac(\FlipFlop_Q0|Q~regout ),
	.datad(\FlipFlop_Q1|Q~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\FlipFlop_Q1|Q~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \FlipFlop_Q1|Q .lut_mask = "f8c0";
defparam \FlipFlop_Q1|Q .operation_mode = "normal";
defparam \FlipFlop_Q1|Q .output_mode = "reg_only";
defparam \FlipFlop_Q1|Q .register_cascade_mode = "off";
defparam \FlipFlop_Q1|Q .sum_lutc_input = "datac";
defparam \FlipFlop_Q1|Q .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N9
maxii_lcell \mux_para_clock|and0~0 (
// Equation(s):
// \mux_para_clock|and0~0_combout  = (\FlipFlop_Q1|Q~regout  & ((\FlipFlop_Q0|Q~regout  $ (\seletor_andar~combout [0])) # (!\seletor_andar~combout [1]))) # (!\FlipFlop_Q1|Q~regout  & ((\seletor_andar~combout [1]) # (\FlipFlop_Q0|Q~regout  $ 
// (\seletor_andar~combout [0]))))

	.clk(gnd),
	.dataa(\FlipFlop_Q1|Q~regout ),
	.datab(\FlipFlop_Q0|Q~regout ),
	.datac(\seletor_andar~combout [0]),
	.datad(\seletor_andar~combout [1]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mux_para_clock|and0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mux_para_clock|and0~0 .lut_mask = "7dbe";
defparam \mux_para_clock|and0~0 .operation_mode = "normal";
defparam \mux_para_clock|and0~0 .output_mode = "comb_only";
defparam \mux_para_clock|and0~0 .register_cascade_mode = "off";
defparam \mux_para_clock|and0~0 .sum_lutc_input = "datac";
defparam \mux_para_clock|and0~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clock_in~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clock_in~combout ),
	.padio(clock_in));
// synopsys translate_off
defparam \clock_in~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X2_Y3_N6
maxii_lcell \mux_para_clock|and0 (
// Equation(s):
// \mux_para_clock|and0~combout  = LCELL((((\mux_para_clock|and0~0_combout  & \clock_in~combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\mux_para_clock|and0~0_combout ),
	.datad(\clock_in~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\mux_para_clock|and0~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \mux_para_clock|and0 .lut_mask = "f000";
defparam \mux_para_clock|and0 .operation_mode = "normal";
defparam \mux_para_clock|and0 .output_mode = "comb_only";
defparam \mux_para_clock|and0 .register_cascade_mode = "off";
defparam \mux_para_clock|and0 .sum_lutc_input = "datac";
defparam \mux_para_clock|and0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X2_Y3_N4
maxii_lcell \FlipFlop_Q0|Q (
// Equation(s):
// \FlipFlop_Q0|Q~regout  = DFFEAS((!\FlipFlop_Q0|Q~regout  & ((\seletor_andar~combout [0]) # ((\seletor_andar~combout [1]) # (\FlipFlop_Q1|Q~regout )))), GLOBAL(\mux_para_clock|and0~combout ), VCC, , , , , , )

	.clk(\mux_para_clock|and0~combout ),
	.dataa(\seletor_andar~combout [0]),
	.datab(\seletor_andar~combout [1]),
	.datac(\FlipFlop_Q0|Q~regout ),
	.datad(\FlipFlop_Q1|Q~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\FlipFlop_Q0|Q~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \FlipFlop_Q0|Q .lut_mask = "0f0e";
defparam \FlipFlop_Q0|Q .operation_mode = "normal";
defparam \FlipFlop_Q0|Q .output_mode = "reg_only";
defparam \FlipFlop_Q0|Q .register_cascade_mode = "off";
defparam \FlipFlop_Q0|Q .sum_lutc_input = "datac";
defparam \FlipFlop_Q0|Q .synch_mode = "off";
// synopsys translate_on

// Location: PIN_6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \andar[0]~I (
	.datain(\FlipFlop_Q0|Q~regout ),
	.oe(vcc),
	.combout(),
	.padio(andar[0]));
// synopsys translate_off
defparam \andar[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_5,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \andar[1]~I (
	.datain(\FlipFlop_Q1|Q~regout ),
	.oe(vcc),
	.combout(),
	.padio(andar[1]));
// synopsys translate_off
defparam \andar[1]~I .operation_mode = "output";
// synopsys translate_on

endmodule
